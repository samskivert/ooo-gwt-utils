<?xml version="1.0" standalone="yes"?>
<project name="gwt-utils" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <!-- configuration properties -->
  <property name="app.name"    value="gwt-utils"/>
  <property name="src.dir"     value="src/main/java"/>
  <property name="deploy.dir"  value="dist"/>

  <property name="maven-ant.vers" value="2.1.1"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url" value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar" 
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom"/>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}/classes"/>
  </target>

  <target name="clean" description="Cleans out compiled classes and docs.">
    <delete dir="${deploy.dir}/classes"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <target name="distclean" description="Cleans out all build resultss.">
    <delete dir="${deploy.dir}"/>
    <delete><fileset dir="${src.dir}" includes="**/*Messages.java"/></delete>
  </target>

  <target name="gmsgs" depends="-prepare" description="Regenerates our i18n message classes.">
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.5" target="1.5">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
      <include name="**/I18nSyncTask.java"/>
    </javac>
    <taskdef name="i18nsync" classname="com.threerings.gwt.tools.I18nSyncTask">
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${deploy.dir}/classes"/>
      </classpath>
    </taskdef>
    <i18nsync srcdir="${src.dir}">
      <fileset dir="${src.dir}" includes="**/*Messages.properties"/>
    </i18nsync>
  </target>

  <target name="compile" depends="-prepare,gmsgs" description="Compiles main sources.">
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.5" target="1.5">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="javadoc" depends="-prepare" description="Builds javadocs.">
    <mkdir dir="${deploy.dir}/docs"/>
    <javadoc windowtitle="${lib.name} API" doctitle="${lib.name} API"
             destdir="${deploy.dir}/docs" additionalparam="-breakiterator">
      <packageset dir="${src.dir}"/>
      <classpath refid="classpath"/>
      <link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
      <link href="http://google-web-toolkit.googlecode.com/svn/javadoc/2.1/"/>
      <link href="http://samskivert.googlecode.com/svn/apidocs/"/>
      <link href="http://evgeny-goldin.org/ant/api/"/>
    </javadoc>
  </target>

  <target name="dist" depends="compile" description="Builds jar files.">
    <jar destfile="${deploy.dir}/${app.name}.jar">
      <fileset dir="${deploy.dir}/classes" includes="**"/>
      <!-- include the source for code to be compiled to JavaScript -->
      <fileset dir="${src.dir}">
        <include name="com/threerings/gwt/**"/>
        <exclude name="com/threerings/gwt/rebind/**"/>
        <exclude name="com/threerings/gwt/tools/**"/>
        <!-- include our sneaky duplicates of Google Collections stuff -->
        <include name="javax/**"/>
        <include name="com/google/**"/>
      </fileset>
    </jar>
  </target>
</project>
